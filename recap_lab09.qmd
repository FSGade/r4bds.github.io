---
title: "Recap of Lab 8"
author: "Søren Helweg Dam"
format:
  revealjs:
    embed-resources: true
    theme: moon
    slide-number: c/t
    width: 1600
    height: 900
    mainfont: avenir
    logo: images/r4bds_logo_small.png
    footer: "R for Bio Data Science"
---

```{r setup}
#| include: false
knitr::opts_chunk$set(echo = FALSE)
```

# Exercises recap

<!--# ---------------------------------------------------------------------- -->
<!--# SLIDE ---------------------------------------------------------------- -->
<!--# ---------------------------------------------------------------------- -->
## Lab 8 Learning Objectives

- Prepare a simple R package for distributing documented functions

- Explain the terms `Repository`, `Dependency`, and `Namespace`

- Implement testing in an R package

- Collaboratively work on an R package on GitHub

<!--# ---------------------------------------------------------------------- -->
<!--# SLIDE ---------------------------------------------------------------- -->
<!--# ---------------------------------------------------------------------- -->
## What is an R package?
  
- A `shareable` collection of `documented` code and/or data

![](images/L08_pkgdir.png){fig-align="center" width="65%"}


<!--# ---------------------------------------------------------------------- -->
<!--# SLIDE ---------------------------------------------------------------- -->
<!--# ---------------------------------------------------------------------- -->
## The package you built

<iframe src="images/L08_example.pdf" width="1000" height="800"></iframe>


<!--# ---------------------------------------------------------------------- -->
<!--# SLIDE ---------------------------------------------------------------- -->
<!--# ---------------------------------------------------------------------- -->
## DESCRIPTION

`Imports` vs `Depends`

```{sh}
#| eval: false
#| echo: true
Package: PackageName
Type: Package
Title: Central Dogma
Version: 0.1.0
Description: simple R package that replicates the central dogma of molecular biology.
License: MIT + file LICENSE
Encoding: UTF-8
LazyData: true
Imports: 
    ggplot2,
    stringr
Depends:
    R (>= 4.0)
```

<!--# ---------------------------------------------------------------------- -->
<!--# SLIDE ---------------------------------------------------------------- -->
<!--# ---------------------------------------------------------------------- -->
# Errors and challenges

<!--# ---------------------------------------------------------------------- -->
<!--# SLIDE ---------------------------------------------------------------- -->
<!--# ---------------------------------------------------------------------- -->
## Missing DESCRIPTION

```{r}
#| echo: true
#| eval: false
> ?randomDNA
ℹ Rendering development documentation for "randomDNA"
Error in .get_package_metadata(pkgdir) : 
  Files 'DESCRIPTION' and 'DESCRIPTION.in' are missing.
Error in .get_package_metadata(pkgdir) : 
  Files 'DESCRIPTION' and 'DESCRIPTION.in' are missing.
```

<!--# ---------------------------------------------------------------------- -->
<!--# SLIDE ---------------------------------------------------------------- -->
<!--# ---------------------------------------------------------------------- -->
## Missing DESCRIPTION

```{r}
#| echo: true
#| eval: false
> ?randomDNA
ℹ Rendering development documentation for "randomDNA"
Error in .get_package_metadata(pkgdir) : 
  Files 'DESCRIPTION' and 'DESCRIPTION.in' are missing.
Error in .get_package_metadata(pkgdir) : 
  Files 'DESCRIPTION' and 'DESCRIPTION.in' are missing.
```

</br>

**An issue with R4.3. Solution:** Build tab > install


<!--# ---------------------------------------------------------------------- -->
<!--# SLIDE ---------------------------------------------------------------- -->
<!--# ---------------------------------------------------------------------- -->
## The NAMESPACE file

```{r}
#| echo: true
#| eval: false
> devtools::document()
ℹ Updating cdogma documentation
ℹ Loading cdogma
Warning message:
Skipping NAMESPACE
✖ It already exists and was not generated by roxygen2.
```

<!--# ---------------------------------------------------------------------- -->
<!--# SLIDE ---------------------------------------------------------------- -->
<!--# ---------------------------------------------------------------------- -->
## The NAMESPACE file

```{r}
#| echo: true
#| eval: false
> devtools::document()
ℹ Updating cdogma documentation
ℹ Loading cdogma
Warning message:
Skipping NAMESPACE
✖ It already exists and was not generated by roxygen2.
```

</br>

**Solution:** Delete `NAMESPACE` file and rerun** `devtools::document()`

<!--# ---------------------------------------------------------------------- -->
<!--# SLIDE ---------------------------------------------------------------- -->
<!--# ---------------------------------------------------------------------- -->
## The NAMESPACE file

```{r}
#| echo: true
#| eval: false
# Generated by roxygen2: do not edit by hand

<<<<<<< HEAD
export(function_x)
=======
export(function_y)
>>>>>>> e34c9e2848142b2afa6394733438e78434483ebc
```


<!--# ---------------------------------------------------------------------- -->
<!--# SLIDE ---------------------------------------------------------------- -->
<!--# ---------------------------------------------------------------------- -->
## The NAMESPACE file

```{r}
#| echo: true
#| eval: false
# Generated by roxygen2: do not edit by hand

<<<<<<< HEAD
export(function_x)
=======
export(function_y)
>>>>>>> e34c9e2848142b2afa6394733438e78434483ebc
```

</br>

**Solution:** Fix `GitHub conflicts`

<!--# ---------------------------------------------------------------------- -->
<!--# SLIDE ---------------------------------------------------------------- -->
<!--# ---------------------------------------------------------------------- -->
## Failing `devtools::check()`

```{r}
#| echo: true
#| eval: false
❯ checking examples ... ERROR
  Running examples in ‘cdogma-Ex.R’ failed
  The error most likely occurred in:
  
  > base::assign(".ptime", proc.time(), pos = "CheckExEnv")
  > ### Name: hello
  > ### Title: Hello, World!
  > ### Aliases: hello
  > 
  > ### ** Examples
  > 
  > hello()
  Error in hello() : could not find function "hello"
  Execution halted
```

<!--# ---------------------------------------------------------------------- -->
<!--# SLIDE ---------------------------------------------------------------- -->
<!--# ---------------------------------------------------------------------- -->
## Failing `devtools::check()`

```{r}
#| echo: true
#| eval: false
❯ checking examples ... ERROR
  Running examples in ‘cdogma-Ex.R’ failed
  The error most likely occurred in:
  
  > base::assign(".ptime", proc.time(), pos = "CheckExEnv")
  > ### Name: hello
  > ### Title: Hello, World!
  > ### Aliases: hello
  > 
  > ### ** Examples
  > 
  > hello()
  Error in hello() : could not find function "hello"
  Execution halted
```

</br>

**Solution:** Delete `R/hello.R` and `man/hello.md`



<!--# ---------------------------------------------------------------------- -->
<!--# SLIDE ---------------------------------------------------------------- -->
<!--# ---------------------------------------------------------------------- -->
# Assignment recap


<!--# ---------------------------------------------------------------------- -->
<!--# SLIDE ---------------------------------------------------------------- -->
<!--# ---------------------------------------------------------------------- -->
## Group assignment

- Make an `R package` that simulate _(more or less)_ the central dogma of molecular biology.
- Discuss why it is a good idea to limit the number of dependencies your package has. When can't it be avoided?
- Discuss the difference between adding an `@importFrom package function` tag to a function description compared to using `package::function()`.
- Write a vignette (user guide)


<!--# ---------------------------------------------------------------------- -->
<!--# SLIDE ---------------------------------------------------------------- -->
<!--# ---------------------------------------------------------------------- -->
## Package names

- centralDogma / Centraldog / cdogma / centdog / Cdogr
- enigma
- molecbio
- dogmaVis
- BioFlow
- BioSeqR
- gene2protein
- biocd / AnalysisCD
- CDXX / dogmaXX / groupXX


<!--# ---------------------------------------------------------------------- -->
<!--# SLIDE ---------------------------------------------------------------- -->
<!--# ---------------------------------------------------------------------- -->
## Dependencies

- They increase the size of our package.

- Can introduce compatibility issues.

- They are rarely avoidable.


<!--# ---------------------------------------------------------------------- -->
<!--# SLIDE ---------------------------------------------------------------- -->
<!--# ---------------------------------------------------------------------- -->
## Namespace

- Extent your package's namespace with dependency imports
    - `@importFrom package function` and `@import package`
    - Cannot be replaced by `package::function`
    - What is actually the difference?
- `package::function`...
    - clutters the code...
    - and can be tiresome if used heavily...
    - but ensure better understanding.